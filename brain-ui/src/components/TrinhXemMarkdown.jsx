import React, { useState, useEffect } from 'react'
import { useParams } from 'react-router-dom'
import ReactMarkdown from 'react-markdown'
import { ExternalLink, FileText } from 'lucide-react'
import './TrinhXemMarkdown.css'

function TrinhXemMarkdown({ file }) {
  const { fileName } = useParams()
  const [noiDung, setNoiDung] = useState('')
  const [dangTai, setDangTai] = useState(true)
  const [loi, setLoi] = useState(null)
  
  const tenFile = file || fileName || 'README.md'

  // D·ªØ li·ªáu markdown m·∫´u cho c√°c file kh√°c nhau
  const duLieuMau = {
    'SCOPE.md': `# Ph·∫°m Vi D·ª± √Ån (SCOPE)

## üéØ M·ª•c Ti√™u Ch√≠nh

**Airbnb Revenue WebApp** l√† h·ªá th·ªëng qu·∫£n l√Ω doanh thu v√† booking cho c√°c t√†i s·∫£n Airbnb, t·∫≠p trung v√†o domain **Property Management System (PMS)**.

## üè¢ Domain Business

### Core Functions
- **Booking Management**: Qu·∫£n l√Ω ƒë·∫∑t ph√≤ng t·ª´ Airbnb CSV uploads
- **Revenue Tracking**: Theo d√µi doanh thu theo th√°ng v·ªõi ADR (Average Daily Rate)
- **Expense Management**: Qu·∫£n l√Ω chi ph√≠ v·∫≠n h√†nh
- **Property Portfolio**: Qu·∫£n l√Ω danh m·ª•c t√†i s·∫£n

### Vietnamese Market Focus
- H·ªó tr·ª£ CSV headers ti·∫øng Vi·ªát t·ª´ Airbnb Vietnam
- Parsing VND currency v√† date formats Vi·ªát Nam
- X·ª≠ l√Ω building codes v√† unit numbers theo chu·∫©n VN

## üõ†Ô∏è Tech Stack

### Backend
- **FastAPI** - Modern Python web framework
- **SQLAlchemy** - ORM v√† database management
- **SQLite** - Lightweight database cho development
- **Alembic** - Database migrations
- **Jinja2** - HTML templating engine

### Data Processing
- **Pandas** - CSV data processing
- **Python datetime** - Date parsing v√† timezone handling

## üìä Key Features

### 1. CSV Upload & Processing
- Upload reservation files t·ª´ Airbnb
- Automatic header mapping (EN/VN)
- Data normalization v√† validation
- Upsert operations ƒë·ªÉ avoid duplicates

### 2. Revenue Reports  
- Monthly revenue summaries
- ADR calculations
- Prorated revenue by actual nights stayed
- Building/unit breakdown

### 3. Expense Tracking
- Categorized expense management
- Property-specific cost allocation
- Monthly expense reports

## üîß Current Status
- ‚úÖ Core booking system functional
- ‚úÖ CSV upload v·ªõi Vietnamese support
- ‚úÖ Basic revenue reports
- ‚è≥ Enhanced expense categorization
- ‚è≥ Advanced analytics dashboard

---
*C·∫≠p nh·∫≠t: 27/09/2025*`,

    'SESSION_CONTEXT.md': `# Ng·ªØ C·∫£nh Session - Brain AI Context

## üìã Th√¥ng Tin D·ª± √Ån

**T√™n D·ª± √Ån**: Airbnb Revenue WebApp  
**Domain**: Property Management System (PMS)  
**Tech Stack**: FastAPI + SQLAlchemy + SQLite  
**Tr·∫°ng Th√°i**: Production Ready  
**Ng√¥n Ng·ªØ**: Python, HTML, CSS, JavaScript  

## üéØ M·ª•c Ti√™u Hi·ªán T·∫°i

### Active Tasks
1. **Database Migration Enhancement** - C·∫£i thi·ªán schema cho expense categories
2. **Vietnamese CSV Support** - TƒÉng c∆∞·ªùng parsing headers ti·∫øng Vi·ªát  
3. **Performance Optimization** - T·ªëi ∆∞u monthly reports v·ªõi large datasets

### Completed Recently
- ‚úÖ Brain Template System integration
- ‚úÖ Automation scripts (17,400x speed improvement)
- ‚úÖ React UI for brain content visualization

## üß† Brain System Context

### File Structure
\`\`\`
.brain/
‚îú‚îÄ‚îÄ SCOPE.md              # Project scope v√† domain definition
‚îú‚îÄ‚îÄ SESSION_CONTEXT.md    # Quick AI context (this file)
‚îú‚îÄ‚îÄ DOMAIN_MAP.md         # Business domain architecture  
‚îú‚îÄ‚îÄ ACTIVE_TASKS.json     # Current development priorities
‚îú‚îÄ‚îÄ WORKFLOW_SIMPLE.md    # Development workflow
‚îî‚îÄ‚îÄ context/              # Additional documentation
\`\`\`

### Quick References
- **Main App**: \`main.py\` - FastAPI routes v√† app setup
- **Models**: \`models.py\` - SQLAlchemy database models
- **Utils**: \`utils.py\` - CSV parsing v√† Vietnamese header mapping
- **Templates**: \`templates/\` - Jinja2 HTML templates
- **Migrations**: \`alembic/\` - Database schema migrations

## üîß Development Workflow

### Setup Commands
\`\`\`powershell
# Virtual environment
python -m venv venv
.\\venv\\Scripts\\activate

# Dependencies  
pip install -r requirements.txt

# Run application
uvicorn main:app --reload
\`\`\`

### Brain Commands
\`\`\`powershell
# Quick brain setup (0.1 second)
.\\create-brain-simple.ps1

# Validate brain structure
.\\validate-brain-template.ps1
\`\`\`

## üé® UI Development

### Brain UI (React)
- **Location**: \`brain-ui/\`
- **Purpose**: Web interface untuk .brain/ content
- **Tech**: React + Vite + Ti·∫øng Vi·ªát UI
- **Components**: BangDieuKhien, ThanhDieuHuong, TrinhXemMarkdown

## üö® Guardrails

### Code Style
- Follow existing patterns dalam codebase
- Use Vietnamese comments trong UI components
- Maintain FastAPI best practices
- Keep SQLAlchemy models normalized

### Data Handling
- Always validate CSV inputs  
- Use header mapping t·ª´ \`utils.py\`
- Handle VND currency parsing properly
- Maintain data consistency v·ªõi upserts

---
*AI Quick Context: D·ª± √°n PMS cho Airbnb v·ªõi brain system ho√†n ch·ªânh*`,

    'DOMAIN_MAP.md': `# B·∫£n ƒê·ªì Domain - Business Architecture

## üèóÔ∏è Domain Architecture

### Core Domains

#### 1. Property Management
\`\`\`
Property
‚îú‚îÄ‚îÄ Building (T√≤a nh√†)
‚îú‚îÄ‚îÄ Unit (CƒÉn h·ªô)  
‚îú‚îÄ‚îÄ Property Details
‚îî‚îÄ‚îÄ Ownership Info
\`\`\`

#### 2. Booking Management  
\`\`\`
Reservation
‚îú‚îÄ‚îÄ Guest Information
‚îú‚îÄ‚îÄ Check-in/Check-out Dates
‚îú‚îÄ‚îÄ Pricing Details
‚îú‚îÄ‚îÄ Status Tracking
‚îî‚îÄ‚îÄ Revenue Calculations
\`\`\`

#### 3. Financial Management
\`\`\`
Financial
‚îú‚îÄ‚îÄ Revenue Tracking
‚îú‚îÄ‚îÄ Expense Categories
‚îú‚îÄ‚îÄ Monthly Reports
‚îî‚îÄ‚îÄ ADR Calculations
\`\`\`

## üìä Data Flow

### CSV Upload Process
1. **File Upload** ‚Üí Airbnb reservation CSV
2. **Header Mapping** ‚Üí Vietnamese/English headers  
3. **Data Parsing** ‚Üí Normalize dates, currency, building codes
4. **Validation** ‚Üí Check required fields v√† consistency
5. **Upsert** ‚Üí Insert new or update existing records

### Revenue Calculation
1. **Base Data** ‚Üí Reservation records t·ª´ database
2. **Prorating** ‚Üí Calculate actual nights stayed  
3. **Aggregation** ‚Üí Group by month, property, building
4. **ADR Calculation** ‚Üí Average Daily Rate per property
5. **Report Generation** ‚Üí Monthly summary v·ªõi breakdowns

## üîÑ Business Processes

### Monthly Reporting Cycle
1. **Data Collection** ‚Üí Gather reservations cho th√°ng
2. **Revenue Calculation** ‚Üí Sum prorated amounts
3. **Expense Allocation** ‚Üí Apply operating costs
4. **Performance Analysis** ‚Üí ADR, occupancy rates
5. **Report Distribution** ‚Üí Generate formatted reports

### Property Onboarding
1. **Property Registration** ‚Üí Add new property to system
2. **Building/Unit Setup** ‚Üí Configure unit structure
3. **Pricing Configuration** ‚Üí Set base rates v√† rules
4. **Integration Testing** ‚Üí Verify CSV uploads work

---
*Domain Map updated: 27/09/2025*`,

    'README.md': `# Brain UI - Giao Di·ªán Web Cho H·ªá Th·ªëng Brain

Ch√†o m·ª´ng ƒë·∫øn v·ªõi **Brain UI** - giao di·ªán web React ƒë·ªÉ hi·ªÉn th·ªã v√† qu·∫£n l√Ω n·ªôi dung h·ªá th·ªëng "b·ªô n√£o d·ª± √°n".

## üß† V·ªÅ H·ªá Th·ªëng Brain

Brain System l√† m·ªôt framework ƒë·ªÉ t·ªï ch·ª©c v√† qu·∫£n l√Ω context, documentation, tasks v√† knowledge cho c√°c d·ª± √°n ph·∫ßn m·ªÅm. N√≥ gi√∫p:

- **Team members** hi·ªÉu nhanh d·ª± √°n
- **AI assistants** c√≥ context ƒë·∫ßy ƒë·ªß  
- **Documentation** ƒë∆∞·ª£c t·ªï ch·ª©c c√≥ h·ªá th·ªëng
- **Knowledge transfer** hi·ªáu qu·∫£

## üéØ M·ª•c Ti√™u Brain UI

### Cho Developers
- Xem nhanh project scope v√† current tasks
- Theo d√µi progress v√† milestones
- Access documentation d·ªÖ d√†ng
- Mobile-friendly interface

### Cho AI Assistants  
- Quick context loading t·ª´ SESSION_CONTEXT.md
- Structured information access
- Current state awareness
- Task prioritization

## üöÄ T√≠nh NƒÉng Ch√≠nh

### üè† B·∫£ng ƒêi·ªÅu Khi·ªÉn
- Project overview v·ªõi key metrics
- Quick navigation ƒë·∫øn t√†i li·ªáu quan tr·ªçng
- Recent activity timeline
- Tech stack summary

### üìë Tr√¨nh Xem Markdown
- Render beautiful markdown files
- Code syntax highlighting  
- Responsive design
- External link handling

### ‚úÖ Qu·∫£n L√Ω Tasks
- View ACTIVE_TASKS.json trong table format
- Filter v√† search capabilities
- Progress tracking v·ªõi visual indicators
- Priority-based organization

### üß≠ Thanh ƒêi·ªÅu H∆∞·ªõng
- Categorized menu structure
- Collapsible sections
- External links integration
- Brain system status indicator

---

**ƒê√¢y l√† sample content - trong th·ª±c t·∫ø s·∫Ω load t·ª´ file .brain/ th·ª±c t·∫ø c·ªßa d·ª± √°n!**`
  }

  useEffect(() => {
    const taiNoiDung = async () => {
      setDangTai(true)
      setLoi(null)
      
      try {
        // Trong production, s·∫Ω fetch t·ª´ /brain/fileName
        // const response = await fetch(`/brain/${tenFile}`)
        // const text = await response.text()
        
        // Hi·ªán t·∫°i d√πng d·ªØ li·ªáu m·∫´u
        const content = duLieuMau[tenFile] || duLieuMau['README.md']
        
        // Simulate loading delay
        await new Promise(resolve => setTimeout(resolve, 500))
        
        setNoiDung(content)
      } catch (error) {
        console.error('L·ªói t·∫£i file:', error)
        setLoi(`Kh√¥ng th·ªÉ t·∫£i file ${tenFile}`)
      } finally {
        setDangTai(false)
      }
    }

    taiNoiDung()
  }, [tenFile])

  if (dangTai) {
    return <div className="dang-tai">ƒêang t·∫£i {tenFile}...</div>
  }

  if (loi) {
    return (
      <div className="loi-tai-file">
        <h2>L·ªói T·∫£i File</h2>
        <p>{loi}</p>
      </div>
    )
  }

  return (
    <div className="trinh-xem-markdown">
      <div className="header-markdown">
        <div className="thong-tin-file">
          <FileText size={24} />
          <div>
            <h1>{tenFile}</h1>
            <p>T√†i li·ªáu Brain System</p>
          </div>
        </div>
        <a 
          href={`https://github.com/your-org/airbnb-webapp/blob/main/.brain/${tenFile}`}
          target="_blank"
          rel="noopener noreferrer"
          className="link-nguon"
        >
          <ExternalLink size={16} />
          Xem File G·ªëc
        </a>
      </div>

      <div className="noi-dung-wrapper">
        <ReactMarkdown className="noi-dung-markdown">
          {noiDung}
        </ReactMarkdown>
      </div>
    </div>
  )
}

export default TrinhXemMarkdown